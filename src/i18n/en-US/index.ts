export default {
  failed: "Action failed",
  success: "Action completed successfully",
  noItems: "No items available for this row",
  sidebar: {
    overview: "Overview",
    dashboard: "Dashboard",
    management: "Management",
    blum: "Blum",
    blumItems: "Blum Items",
    blumSets: "Blum Sets",
    blumTransactions: "Blum Transactions",
    admin: "Admin",
    items: "Items",
    item: "Item", // Singular form for employees
    branches: "Branches",
    branch: "Branch", // Singular form for employees
    cashbox: "Cashbox",
    viewCashbox: "View Cashbox",
    categories: "Categories",
    category: "Category", // Singular form for employees
    offers: "Offers",
    offer: "Offer", // Singular form for employees
    transferRequests: "Transfer Requests",
    transferRequest: "Transfer Request", // Singular form for employees
    warehouseTransfers: "Warehouse Transfers",
    warehouseTransfer: "Warehouse Transfer", // Singular form for employees
    transactions: "Transactions",
    transaction: "Transaction", // Singular form for employees
    itemTransaction: "Item Transaction",
    system: "System",
    activityLog: "Activity Log",
    pendingUpdates: "Pending Requests",
    notifications: "Send Notifications", // Admin notification sender
    people: "People",
    accountant: "Accountant",
    employees: "Employees",
    employee: "Employee", // Singular form for employees
    customers: "Customers",
    customer: "Customer", // Singular form for employees
    locations: "Locations",
    location: "Location", // Singular form for employees
    reports: "Reports",
    report: "Report", // Singular form for employees
    warehouses: "Warehouses",
    warehouse: "Warehouse", // Singular form for employees
    purchases: "Purchases",
    purchase: "Purchase", // Singular form for employees
    sells: "Sales",
    sell: "Sale", // Singular form for employees
    expenses: "Expenses", // Add this new section
    expenseCategories: "Expense Categories",
    expenseCategory: "Expense Category", // Singular form for employees
    expense: "Expense", // Singular form for employees
  },
  blum: {
    stitle: "Blum Sets",
    ssub: "Manage and configure Blum component sets",
    title: "Blum Item",
    sub: "Manage individual Blum components",
    update: "Update",
    updateItem: "Update Item",
    item: "Item",
    addNewItem: "Add New Item",
    addNewSet: "Add New Set",
    resetFilters: "Reset Filters",
    searchItemLabel: "Search Item",
    searchSetLabel: "Search Set",
    itemImage: "Item Image",
    itemName: "Item Name",
    itemCode: "Item Code",
    unitPrice: "Unit Price",
    pricingInvventory: "Pricing & Inventory",
    unitCost: "Unit Cost",
    quantity: "Quantity",
    manufacturer: "Manufacturer",
    category: "Category",
    hardwareComponent: "Hardware Component",
    partNumber: "Part Number",
    basicInfo: "Basic Info",
    imageUpload: "Upload Image",
    setName: "Set Name",
    setNameHint: "Enter a descriptive name for the set",
    setNameTooLong: "Name is too long",
    setDescription: "Set Description",
    setDescriptionHint: "Describe the purpose of this set",
    setImage: "Set Image",
    setImageHint: "Upload an image to represent your set",
    setItems: "Set Items",
    searchItems: "Search Items",
    searchItemsHint: "Search by name, code, or part number",
    searchForItems: "Search for items to add to your set",
    findItems: "Find Items",
    searchResults: "Search Results",
    clickToAdd: "Click to Add",
    noItemsFound: "No items found",
    itemAlreadyAdded: "Item already added to the set",
    itemAddedToSet: "Item added to the set",
    addItem: "Add Item",
    currentItems: "Current Items",
    selectItem: "Select Item",
    newImagePreview: "New Image Preview",
    currentImage: "Current Image",
    uploadImagePlaceholder: "Upload an image to preview",
    addAtLeastOneItem: "Please add at least one item to the set",
    updateSet: "Update Set",
    updateSetSubtitle: "Edit Blum component set",
    createSetSubtitle: "Create and manage Blum component sets",
    set: "Blum Set",
    setDetails: "Set Details",
    viewDetails: "View Details",
    itemCount: "Item Count",
    noItemsSelected: "No items selected yet",
    searchAndAddItems: "Search above and click to add items to your set",
    clearAll: "Clear All",
    clearAllItems: "Remove all selected items",
    allItemsCleared: "All items removed",
    confirmDeleteSet: "Are you sure you want to delete the set '{name}'?",
    confirmDeleteItem: "Are you sure you want to delete the item '{name}'?",
  },

  transaction: {
    searchByIdLabel: "Search by ID",
    paySupplier: "Pay Supplier",
    receiveFromCustomer: "Receive from Customer",
    title: "Transactions",
    modalTitle: "Transaction Details",
    header: "Transactions Dashboard",
    subtitle: "Managing buying and selling transactions",
    viewInvoice: "View Invoice",
    addNew: "Add New Transaction",
    searchLabel: "Search by customer name or note",
    resetFilters: "Reset Filters",
    typeFilter: "Filter by transaction type",
    paymentType: "Payment Method",
    paymentFilter: "Filter by payment type",
    count: "Total Transactions",
    editNotAllowed: "Transaction is locked and cannot be edited",
    nextPaymentDate: "Next Payment",

    columns: {
      id: "ID",
      type: "Type",
      customer: "Customer",
      warehouse: "Warehouse",
      paymentProgress: "Payment Progress",
      paymentType: "Payment Type",
      totalPrice: "Total Price",
      paidPrice: "Paid Price",
      remainingPrice: "Remaining Price",
      refundStatus: "Refund Status",
      createdAt: "Created At",
      actions: "Actions",
    },

    labels: {
      total: "Total",
      paid: "Paid",
      remaining: "Remaining",
      complete: "Complete",
      fullyPaid: "Fully Paid",
    },

    types: {
      purchase: "Purchase",
      sell: "Sell",
    },

    paymentTypes: {
      cash: "Cash",
      borrow: "Borrow",
      credit: "Credit",
      bank: "Bank Transfer",
    },

    actions: {
      view: "View Details",
      edit: "Edit",
      delete: "Delete",
      buySell: "Buy/Sell",
    },

    refundItems: "Refund Items",
    refundTransaction: "Refund Transaction",

    freeding: "Cancel Reservation",
    freedingConfirmTitle: "Confirm Cancel Reservation",
    freedingConfirmMessage:
      "Are you sure you want to cancel this reservation? Items will return to available stock. This action cannot be undone.",
    freedingSuccess: "Reservation canceled successfully",
    freedingError: "Failed to cancel reservation. Please try again.",

    printNotification:
      "To print invoices, open the transaction and use the print button in the invoice window.",
    printWarning: "Please use the invoice print button for proper A4 formatting.",
    refundDetails: "Refund Details",
    refundAmount: "Refund Amount",
    refundReason: "Refund Reason",
    refundSummary: "Refund Summary",
    refundedAmounts: "Refunded Amounts",
    refunded: "Refunded",
    refundId: "Refund ID",
    refundDate: "Refund Date",
    refundedItems: "Refunded Items",
    usdIn: "USD In",
    iqdIn: "IQD In",
    usdOut: "USD Out",
    iqdOut: "IQD Out",
    viewRefundDetails: "View Refund Details",
    reason: "Reason",
    reasonMinLength: "Reason must be at least 10 characters",
    transactionDetails: "Transaction Details",
    name: "Name",
    location: "Location",
    phone: "Phone",
    purchaseBorrow: "Purchase Borrow",
    supplierInfo: "Supplier Info",
    customerInfo: "Customer Info",
    warehouseInfo: "Warehouse Info",
    warehouseName: "Warehouse Name",
    warehouseCode: "Warehouse Code",
    capacity: "Capacity",
    discountRate: "Discount Rate",
    discountedPrice: "Discounted Price",
    editability: "Editability",
    editable: "Editable",
    locked: "Locked",
    itemsList: "Items List",
    noItems: "No items available",
    note: "Note",
    refundInfo: "Refund Info",
    transactionRefunded: "This transaction has been refunded",
    borrowInfo: "Borrow Info",
    oldBorrowed: "Previous Borrow",
    newBorrowed: "New Borrow",
    viewDetails: "View Details",
    editTransaction: "Edit Transaction",
    updateTransaction: "Update Transaction",
    transactionUpdatedSuccessfully: "Transaction updated successfully",
    errorUpdatingTransaction: "Failed to update transaction. Please try again.",
    updatingTransaction: "Updating transaction...",
    customerCannotBeChanged: "Customer/Supplier cannot be changed",
    warehouseCannotBeChanged: "Warehouse cannot be changed",
    itemsCannotBeModified: "Items cannot be modified in edit mode",
    selectPaymentType: "Select Payment Type",
    exchangeRateLabel: "Exchange Rate (IQD per USD)",
    exchangeRateMustBePositive: "Exchange rate must be positive",
    warehouse: "Warehouse",
    items: "Items",
    errors: {
      failedToLoadTransaction: "Failed to load transaction details",
      transactionNotFound: "Transaction not found",
      invalidTransactionId: "Invalid transaction ID"
    },
    statusTypes: {
      completed: "Completed",
      reserved: "Reserved",
      cancelled: "Cancelled"
    },
    customer: "Customer",
    status: "Status",
    totalPrice: "Total Price",
    paidPrice: "Paid Price",
    unpaidPrice: "Unpaid Price",
    date: "Date",
    type: "Type",
    exchangeRate: "Exchange Rate (USD to IQD)",
    originalTransactionRate: "Use Original Transaction Rate",
    currentRate: "Current Rate: {rate}",
    calculatedAmount: "Calculated Amount: ${amount}",
    rateMustBePositive: "Rate must be positive",
    amountMustBePositive: "Amount must be positive",
    cannotRefundMore: "Cannot refund more than ${amount}",
    maxRefundable: "Maximum refundable: ${amount}",
    itemsToRefund: "Items to Refund",
    available: "Available",
    units: "Unit",
    unitPrice: "Unit Price",
    quantity: "Quantity",
    quantityMustBePositive: "Quantity must be positive",
    subtotal: "Subtotal",
    cannotRefundMoreThanAvailable: "Cannot refund more than {available} units",
    maxAvailable: "Maximum: {max}",
    selectAtLeastOneItem: "Please select at least one item to refund",
    noItemsForRefund: "No items available for refund",
    processRefund: "Process Refund",
    refundProcessedSuccessfully: "Refund processed successfully",
    failedToProcessRefund: "Failed to process refund",
    noTransactionData: "No transaction data available",
    cannotRefundQuantity:
      "Cannot refund {quantity} of {itemName}. Only {available} available.",

    loading: "Loading transactions...",
    noData: "No transactions found",
    fetchSuccess: "Transactions loaded successfully",
    fetchError: "Failed to load transactions",

    transactionId: "Transaction ID",
    transactionNumber: "Transaction Number",
    paymentStatus: "Payment Status",
    paid: "Paid",
    unpaid: "Unpaid",
    partiallyPaid: "Partially Paid",
    complete: "Complete",
    pending: "Pending",
    cancelled: "Cancelled",
    description: "Description",
    reference: "Reference",
    invoice: "Invoice",
    receipt: "Receipt",

    allTypes: "All Types",
    allPaymentTypes: "All Payment Types",

    refresh: "Refresh",
    export: "Export",

    itemsPerPage: "Items per page",
    of: "of",
    page: "Page",

    newSellTransaction: "New Sell Transaction",
    newPurchaseTransaction: "New Purchase Transaction",
    createNewTransactionSubtitle: "Create a new transaction with step-by-step guidance",
    createTransaction: "Create Transaction",
    confirmCloseMessage: "You have unsaved changes. Are you sure you want to close without saving?",
    fillAllRequiredFields: "Please fill all required fields before continuing",
    transactionCreatedSuccessfully: "Transaction created successfully",
    errorCreatingTransaction: "Failed to create transaction. Please try again.",
    sellTransaction: "Sell Transaction",
    purchaseTransaction: "Purchase Transaction",
    sellTransactionDesc: "Complete a sale for a customer",
    purchaseTransactionDesc: "Record a purchase from a supplier",
    addNote: "Add transaction notes (optional)",

    progress: "Progress",
    getStarted: "Get Started",
    readyToCreate: "Ready to Create",
    continue: "Continue",

    steps: {
      step: "Step",
      basicInfo: "Basic Info",
      basicInfoSellDesc: "Select customer, branch, warehouse, and payment details",
      basicInfoPurchaseDesc: "Select supplier, branch, warehouse, and payment details",
      itemSelection: "Item Selection",
      itemSelectionDesc: "Search and select items for this transaction",
      details: "Details & Pricing",
      detailsDesc: "Review quantities, pricing, and totals",
      summary: "Summary & Review",
      summaryDesc: "Final review before creating transaction",
    },

    itemDetails: "Item Details",
    itemTotal: "Item Total",
    noItemsSelected: "No items selected",
    goBackToSelectItems: "Go back to select items for your transaction",
    basedOnSoloUnitPrice: "Based on solo unit price",
    editableUnitPrice: "You can edit the unit price",

    discountPercentage: "Discount Percentage",
    discount: "Discount",
    total: "Total",
    pricing: "Pricing",
    summary: "Summary",
    totalItems: "Total Items",
    totalQuantity: "Total Quantity",
    itemsSummary: "Items Summary",
    financialSummary: "Financial Summary",

    readyToSubmit: "Ready to Submit",
    reviewBeforeSubmit: "Please review all details before creating the transaction",

    exchangeRateInfo: "Exchange Rate Info",
    totalInIqd: "Total in IQD",

    selectedCustomer: "Selected Customer",
    selectedBranch: "Selected Branch",
    selectedWarehouse: "Selected Warehouse",
  },


  layout: {
    title: "Bazrgani Drwst",
    toggleSidebar: "Toggle Sidebar",
    languageSelector: "Select Language",
    version: "Version {version}",
    essentialLinks: "Essential Links",
    docs: "Documentation",
    github: "GitHub",
    discord: "Discord Chat Channel",
    forum: "Forum",
    twitter: "Twitter",
    facebook: "Facebook",
    awesome: "Awesome Quasar",
    community: "Quasar Community Projects"
  },
  navigation: {
    home: "Home",
    homeCaption: "Homepage",
    dashboard: "Dashboard",
    dashboardCaption: "Analytics Overview",
    blum: "Blum",
    blumCaption: "Manage Blum Components",
    admin: "Administration",
    adminCaption: "Administration Section",
    accountant: "Accountant",
    accountantCaption: "Accounting Section",
    items: "Items",
    itemsCaption: "Manage Products",
    branches: "Branches",
    branchesCaption: "Manage Branches",
    itemCategories: "Item Categories",
    itemCategoriesCaption: "Manage Categories",
    employees: "Employees",
    employeesCaption: "Manage Employees",
    locations: "Locations",
    locationsCaption: "Manage Locations",
    customers: "Customers",
    customersCaption: "Manage Customers",
    transactions: "Transactions",
    transactionsCaption: "Manage Transactions",
    reports: "Reports",
    reportsCaption: "Business Analytics and Insights",
    overview: "Overview",
    overviewCaption: "Overview",
    warehouses: "Warehouses",
    warehousesCaption: "Warehouse Reports",
    categories: "Categories",
    categoriesCaption: "Category Analytics",
    purchases: "Purchases",
    purchasesCaption: "Purchase Reports",
    sales: "Sales",
    salesCaption: "Sales Analytics",
    userProfile: "User Profile",
    menu: "Menu",
    language: "Language"
  },
  auth: {
    welcomeBack: "Welcome Back",
    email: "Email",
    emailOrUsername: "Email or Username",
    emailRequired: "Email is required",
    emailOrUsernameRequired: "Email or Username is required",
    password: "Password",
    passwordRequired: "Password is required",
    login: "Login",
    forgotPassword: "Forgot Password",
    rememberMe: "Remember Me",
    logout: "Logout",
    logoutDescription: "Sign out from your account",
    noAccount: "Don't have an account?",
    loginFailed: "Login failed",
    contactAdmin: "Contact Admin",
    passwordResetTitle: "Password Reset Request",
    passwordResetSubtitle: "Need help with your password?",
    passwordResetMessage: "For security reasons, only administrators can reset user passwords. Please contact the system administrator using the information below to request a password reset.",
    contactAdminTitle: "Need to contact an account or help?",
    contactAdminMessage: "To create a new account or get help with your current account, please contact the system administrators using the contact information below.",
    adminContactInfo: "Admin Contact Information",
    adminHardi: "هەردی",
    adminKamyar: "كامیار"
  },
  maintenance: {
    title: "Under Maintenance",
    subtitle: "We'll be back soon!",
    description: "We are currently performing scheduled maintenance to improve your experience. Thank you for your patience.",
    features: {
      improvements: "System Improvements",
      security: "Security Updates",
      performance: "Performance Enhancements"
    },
    checkStatus: "Check Status",
    goHome: "Go Home",
    estimatedTime: "Estimated completion time: - hours",
    contactInfo: "For urgent matters, please contact the support team."
  },
  report: {
    // Common report translations
    refresh: "Refresh Data",
    export: "Export Report",
    print: "Print Report",

    viewDetails: "View Details",
    viewInvoice: "View Invoice",
    exportSale: "Export Sale",
    exportPurchase: "Export Purchase",
    exportBranch: "Export Branch",
    exportCategory: "Export Category",
    exportWarehouse: "Export Warehouse",
    viewingDetails: "Viewing Details for {name}",
    fromDate: "From Date",
    toDate: "To Date",
    dateRangeFilter: "Date Range Filter",
    applyFilter: "Apply Filter",
    clearFilter: "Clear Filter",
    today: "Today",
    yesterday: "Yesterday",
    thisWeek: "This Week",
    thisMonth: "This Month",
    lastMonth: "Last Month",
    date: "Date",
    from: "From",
    to: "To",
    search: "Search...",
    toggleFilters: "Toggle Filters",
    tryAdjustingFilters: "Try adjusting the filters or refreshing the data",

    // Report Headers
    branchReports: "Branch Reports",
    branchSubtitle: "An overview of all branch operations and performance",
    warehouseReports: "Warehouse Reports",
    warehouseSubtitle: "Detailed analysis for inventory management",
    categoryReports: "Category Reports",
    categorySubtitle: "Analyze item category performance and distribution",
    purchaseReports: "Purchase Reports",
    purchaseSubtitle: "Analyze purchase transactions and supplier payments",
    sellReports: "Sales Reports",
    sellSubtitle: "Sales performance and customer receivables tracking",
    salesReports: "Sales Reports",
    salesSubtitle: "Sales performance and customer receivables tracking",

    // Statistics labels
    totalBranches: "Total Branches",
    totalBranchesSubtitle: "All registered branches",
    activeBranches: "Active Branches",
    activeBranchesSubtitle: "Currently operating",
    totalWarehouses: "Total Warehouses",
    totalWarehousesSubtitle: "Across all branches",
    totalUsers: "Total Users",
    totalUsersSubtitle: "Active staff",
    totalCategories: "Total Categories",
    totalCategoriesSubtitle: "Product categories",
    activeCategories: "Active Categories",
    activeCategoriesSubtitle: "Currently in use",
    totalProducts: "Total Products",
    totalProductsSubtitle: "All inventory items",
    totalPurchases: "Total Purchases",
    totalPurchasesSubtitle: "Purchase transactions",
    totalSales: "Total Sales",
    totalSalesSubtitle: "Sales transactions",
    totalRevenue: "Total Revenue",
    totalRevenueSubtitle: "Income from sales",
    totalCapacity: "Total Capacity",
    totalCapacitySubtitle: "Aggregate storage capacity",
    totalItems: "Total Items",
    totalItemsSubtitle: "Items across all warehouses",
    items: "Items",
    avgItemsCategory: "Average Items per Category",
    avgItemsCategorySubtitle: "Average distribution",
    capacityUtilization: "Capacity Utilization",
    categoryPerformance: "Category Performance",
    totalAmount: "Total Amount",
    totalPurchaseAmountSubtitle: "Total Purchase Value",
    totalPaid: "Total Paid",
    totalPaidSubtitle: "Amount paid to suppliers",
    outstanding: "Outstanding",
    outstandingSubtitle: "Pending payments",
    outstandingReceivablesSubtitle: "Pending receivables",
    totalReceived: "Total Received",
    totalReceivedSubtitle: "Amount received from customers",
    totalValue: "Total Value",
    totalValueSubtitle: "Total purchase value",
    averageValue: "Average Value",
    averageValueSubtitle: "Average purchase value",
    creditPurchases: "Credit Purchases",
    creditPurchasesSubtitle: "Purchases on credit",
    averageSale: "Average Sale",
    averageSaleSubtitle: "Average sale value",
    totalProfit: "Total Profit",
    totalProfitSubtitle: "Total earned profits",
    totalItemsQuantity: "Total Items Quantity",
    totalPurchaseBorrow: "Total Purchase Borrow",
    totalSellBorrow: "Total Sell Borrow",

    // Table columns
    columns: {
      branchCode: "Branch Code",
      branchName: "Branch Name",
      location: "Location",
      phone: "Phone",
      manager: "Manager",
      employees: "Employees",
      warehouses: "Warehouses",
      status: "Status",
      warehouseName: "Warehouse Name",
      warehouseCode: "Warehouse Code",
      capacity: "Capacity",
      itemCount: "Item Count",
      categoryName: "Category Name",
      categoryCode: "Category Code",
      parentCategory: "Parent Category",
      itemsCount: "Item Count",
      purchaseId: "Purchase ID",
      supplier: "Supplier",
      date: "Date",
      items: "Items",
      amount: "Amount",
      paymentStatus: "Payment Status",
      saleId: "Sale ID",
      customer: "Customer",
      warehouse: "Warehouse",
      purchases: "Purchases",
      partiallyPaid: "Partially Paid",
      fullyPaid: "Fully Paid",
      totalAmount: "Total Amount",
      totalPrice: "Total Price",
      paidAmount: "Paid Amount",
      receivedAmount: "Received Amount",
      purchaseDate: "Purchase Date",
      saleDate: "Sale Date",
      paymentType: "Payment Type",
      no: "No",
      users: "Users",
      created: "Created",
      utilization: "Utilization",
      payment: "Payment",
      address: "Address",
      branch: "Branch",

      totalItemsCount: "Total Items Count",
      totalItemsQuantity: "Total Items Quantity",
      totalItemsCost: "Total Items Cost",
      purchaseBorrow: "Total Purchase Borrow",
      sellBorrow: "Total Sell Borrow"
    },

    // Table titles
    branchDetails: "Branch Details",
    warehouseDetails: "Warehouse Details",
    categoryDetails: "Category Details",
    purchaseDetails: "Purchase Details",
    saleDetails: "Sale Details",

    // Notification messages
    dataRefreshed: "Report data refreshed successfully",
    refreshFailed: "Failed to refresh report data",
    exportSuccess: "Report exported successfully",
    printInitiated: "Printing report...",

    // Analysis components
    revenueBreakdown: "Revenue Breakdown",
    cashSales: "Cash Sales",
    creditSales: "Credit Sales",
    collectionEfficiency: "Collection Efficiency",
    collected: "Collected",
    efficiencyRating: "Efficiency Rating",
    performanceMetrics: "Performance Metrics",
    averageSaleValue: "Average Sale Value",
    topWarehouse: "Top Warehouse",
    topSupplier: "Top Supplier",
    sales: "Sales",
    paymentBreakdown: "Payment Breakdown",
    cashPayments: "Cash Payments",
    creditPayments: "Credit Payments",
    paymentRatio: "Payment Ratio",
    paid: "Paid",

    // Ratings
    ratings: {
      Excellent: "Excellent",
      Good: "Good",
      Average: "Average",
      "Needs Improvement": "Needs Improvement",
    },
  },

  admin: {
    dashboardTitle: "Admin Dashboard",
    managingAdmins: "Managing System Admins",
    addNew: "Add New Admin",
    update: "Update Admin",
    settings: "Settings",
    searchLabel: "Search by name or username",
    resetFilters: "Reset Filters",
    searchResults: "Search results for",
    adminsFound: "Admins found",
    clearSearch: "Clear Search",
    actions: "Admin Actions",
    comingSoon: "Coming Soon",
    comingSoonDesc: "More admin features will be available soon",
    stayTuned: "Stay Tuned",
    sendNotification: {
      title: "Send Notification",
      subtitle: "Send notifications to system users",
      cardDescription: "Send notifications to system users",
      openSender: "Open Notification Sender",
      recipients: "Recipients",
      allUsers: "All Users",
      allUsersDesc: "Send to all users in the system",
      admins: "Admins",
      adminsDesc: "Send only to system admins",
      employees: "Employees",
      employeesDesc: "Send to regular employees",
      accountants: "Accountants",
      accountantsDesc: "Send to the accounting department",
      content: "Notification Content",
      titleLabel: "Notification Title",
      titlePlaceholder: "Enter the notification title...",
      titleRequired: "Title is required",
      descriptionLabel: "Description",
      descriptionPlaceholder: "Enter the notification description...",
      descriptionRequired: "Description is required",
      priority: "Priority Level",
      priorityLow: "Low Priority",
      priorityLowDesc: "General information",
      priorityNormal: "Normal Priority",
      priorityNormalDesc: "Standard notification",
      priorityHigh: "High Priority",
      priorityHighDesc: "Important notification",
      priorityUrgent: "Urgent",
      priorityUrgentDesc: "Requires immediate attention",
      preview: "Preview",
      now: "Now",
      send: "Send Notification",
      success: "Notification sent successfully",
      error: "Failed to send notification",
      recentNotifications: "Recent Notifications",
      noRecentNotifications: "No recent notifications"
    },
    columns: {
      profile: "Profile Picture",
      name: "Name",
      username: "Username",
      phone: "Phone Number",
      gender: "Gender",
      type: "Type",
      role: "Role",
      actions: "Actions"
    },
    personalInfo: "Personal Information",
    accountDetails: "Account Details",
    name: "Full Name",
    username: "Username",
    phone: "Phone Number",
    gender: "Gender",
    male: "Male",
    female: "Female",
    role: "Role",
    password: "Password",
    confirmPassword: "Confirm Password",
    passwordMismatch: "Passwords do not match",
    profileImage: "Profile Picture",
    selectImage: "Select Image",
    addBtn: "Add Admin",
    updateBtn: "Update Admin",
    newUser: "New Admin",
    cancel: "Cancel",
    imagePreview: "Image Preview",
    newImagePreview: "New Image Preview",
    currentImage: "Current Image"
  },
  accountant: {
    dashboardTitle: "Accountant Dashboard",
    managingUsers: "Managing System Accountants",
    addNew: "Add New Accountant",
    updateTitle: "Update Accountant Details",
    totalAccountants: "Total Accountants",
    maleAccountants: "Male Accountants",
    femaleAccountants: "Female Accountants",
    searchLabel: "Search by name or username",
    resetFilters: "Reset Filters",
    genderFilter: "Filter by Gender",
    male: "Male",
    female: "Female",
    name: "Full Name",
    username: "Username",
    phone: "Phone Number",
    gender: "Gender",
    image: "Profile Picture",
    uploadImage: "Upload Image",
    imageHint: "Optional",
    addBtn: "Add Accountant",
    updateBtn: "Update Accountant",
    actions: "Actions",
    newUser: "New Accountant",
    role: "Accountant",
    personalInfo: "Personal Information",
    accountDetails: "Account Details"
  },
  item: {
    dashboardTitle: "Items Dashboard",
    managingItems: "Managing Product Inventory",
    addNew: "Add New Item",
    add: "Add Item",
    update: "Update Item",
    details: "Details",
    delete: "Delete",
    deleteConfirm: "Are you sure you want to delete this item?",
    archive: "Archive",
    archiveItem: "Archive Item",
    archiveWarning: "This item will be permanently archived",
    itemInformation: "Item Information",
    archiveWarnings: "Archiving Warnings",
    stockCheck: "Stock Check",
    noStockRemaining: "✓ No stock remaining – ready to archive",
    stockStillRemaining: "⚠ Stock still remaining: {quantity} units",
    archiveConsequences: "Important – please read carefully:",
    archiveWarning1: "The item will be permanently archived",
    archiveWarning2: "All transaction records will be kept but the item will be hidden",
    archiveWarning3: "The item will not appear in product lists or search",
    confirmArchive: "Confirmation Required",
    confirmArchiveText: "I understand the consequences and want to archive this item",
    cannotArchiveWithStock: "Cannot archive item while stock remains. Please transfer or sell remaining stock first.",
    archiveNow: "Archive Item",
    totalItems: "Total Items",
    lowStock: "Low Stock Items",
    highProfit: "High Profit Items",
    searchLabel: "Search by name or SKU",
    resetFilters: "Reset Filters",
    categoryFilter: "Filter by Category",
    priceFilter: "Filter by Price",
    image: "Image",
    selectImage: "Select Image",
    name: "Name",
    sku: "SKU",
    category: "Category",
    cost: "Cost",
    price: "Price",
    margin: "Profit Margin",
    actions: "Actions",
    description: "Description",
    stock: "Stock",
    status: "Status",
    addBtn: "Add Item",
    addSuccess: "Item added successfully",
    updateBtn: "Update Item",
    updateSuccess: "Item updated successfully",
    basicInfo: "Basic Information",
    productName: "Item Name",
    pricingMeasurements: "Pricing & Measurements",
    weight: "Weight (kg)",
    volume: "Volume",
    pricing: "Pricing",
    unitCost: "Unit Cost",
    profitMargin: "Profit Margin (%)",
    soloUnitPrice: "Single Unit Price",
    bulkUnitPrice: "Bulk Unit Price",
    minQuantity: "Minimum Quantity",
    minQuantityHint: "Minimum stock level for notifications",
    packageOptions: "Package Options",
    packetUnit: "Packet Unit",
    packageUnit: "Package Unit",
    packetUnits: "Packet Units",
    packageUnits: "Package Units",
    packets: "Packets",
    packages: "Packages",
    totalQuantity: "Total Quantity",
    packetCost: "Packet Cost",
    packageCost: "Package Cost",
    packetSoloPrice: "Single Packet Price",
    packetBulkPrice: "Bulk Packet Price",
    packageSoloPrice: "Single Package Price",
    packageBulkPrice: "Bulk Package Price",
    productImage: "Item Image",
    newItem: "New Item",
    itemDetails: "Item Details",
    pricingInfo: "Pricing Information",
    inventoryInfo: "Inventory Information",
    physicalProperties: "Physical Properties",
    units: "Units",
    allItems: "All Items",
    individual: "Individual",
    createdAt: "Created At",
    role: "Item",
    negativeCost: "Cost cannot be negative",
    negativePrice: "Price cannot be negative",
    negativeWeight: "Weight cannot be negative",
    negativeVolume: "Volume cannot be negative",
    negativeMargin: "Profit margin cannot be negative",
    negativeUnits: "Units cannot be negative",
    cancel: "Cancel",
    packageStructureHint: "📦 Package Structure: Packages ← Packets (inside Packages)",
    packageUnitsHint: "Number of packages",
    packetUnitsHint: "Number of packets per package",

    searchItems: "Search Items",
    searchItem: "Search items...",
    selectWarehouseFirst: "Please select a warehouse first to search for items",
    noItemsFound: "No items found",
    selectedItems: "Selected Items",
    addToTransaction: "Add to Transaction",
    removeFromTransaction: "Remove from Transaction",
    itemAdded: "Item added to transaction",
    itemRemoved: "Item removed from transaction",
    availableItems: "Available Items",
    added: "Added",
    addAllToTransaction: "Add All to Transaction",
    basePrice: "Base Price",
    available: "Available",
    unitPrice: "Unit Price",
    packetsPerPackage: "Packets per Package",
    numberOfPackages: "Number of Packages",
    searchToBegin: "Start typing to search",
    browseAllItems: "Browse All Items",

    updateUnitCost: "Update Unit Cost",
    itemInfo: "Item Information",
    currentUnitCost: "Current Unit Cost",
    newUnitCost: "New Unit Cost",
    updateCost: "Update Unit Cost",
    requestUpdate: "Request Unit Cost Update",

    updatePrices: "Update Sales Prices",
    currentPrices: "Current Prices",
    newPrices: "New Prices",
    currentStock: "Current Stock",
    pieces: "Pieces",

    chartTitle: "Sales Report",
    topSold: {
      unitSold: "Units Sold",
      chartTitle: "Top Selling Items",
      chartSubtitle: "{count} top selling items"
    }
  },
  warehouse: {
    title: "Warehouse Management",
    description: "Manage warehouse items and inventory",
    dashboardTitle: "Warehouse Dashboard",
    managingWarehouses: "Managing System Warehouses",
    addNew: "Add New Warehouse",
    update: "Update Warehouse",
    details: "Details",
    delete: "Delete",
    deleteConfirm: "Are you sure you want to delete this warehouse?",
    totalWarehouses: "Total Warehouses",
    searchLabel: "Search by name or code",
    resetFilters: "Reset Filters",
    branchFilter: "Filter by Branch",
    name: "Name",
    code: "Code",
    branch: "Branch",
    branchId: "Branch ID",
    address: "Address",
    capacity: "Capacity",
    actions: "Actions",
    addBtn: "Add Warehouse",
    updateBtn: "Update Warehouse",
    basicInfo: "Basic Information",
    locationDetails: "Location Details",
    capacityError: "Capacity must be greater than zero",
    addSuccess: "Warehouse created successfully",
    updateSuccess: "Warehouse updated successfully",
    addNote: "Add Note",
    items: "Warehouse Items",
    noItems: "No items in this warehouse",
    viewItems: "View Items",
    addItem: "Add Item",
    branchWarehouses: "Branch Warehouses",
    branchName: "Branch Name",
    toggleActive: "Toggle Active Status",
    active: "Active",
    inactive: "Inactive",
    noWarehousesFound: "No warehouses found",
    createFirst: "Please create a warehouse first",
    selectBranch: "Select Branch",
    selectBranchDesc: "Please select a branch to view warehouses",
    add: "Add",
    newWarehouse: "New Warehouse",
    role: "Role",
    activeWarehouses: "Active Warehouses",
    fastNavigation: "Quick Navigation",
    clickRowToViewItems: "Click a row to view items",

    warehouse: "Warehouse",
    selectWarehouse: "Select a Warehouse",
    selectWarehouseHelp: "Please select a warehouse to proceed",
    selectBranchFirst: "Please select a branch first",
    selectBranchFirstHelp: "Please select a branch to view available warehouses",
    noWarehousesAvailable: "No warehouses available for this branch",
    branchRequiredForSelection: "Branch selection is required to choose a warehouse",
    warehouseSelectionDisabled: "Warehouse selection is currently disabled"
  },
  warehouseItem: {
    title: "Warehouse Items",
    warehouseName: "Warehouse Name",
    addNew: "Add New Item",
    loadingItems: "Loading items...",
    noItemsFound: "No items found",
    createFirst: "Please create an item first",
    noData: "No data available",
    loadDataFirst: "Please load data first",
    selectWarehouse: "Select a Warehouse",
    selectWarehouseDesc: "Please select a warehouse to view items",
    name: "Name",
    category: "Category",
    code: "Code",
    partNo: "Part Number",
    volume: "Volume",
    quantity: "Quantity",
    stockStatus: "Stock Status",
    lowStock: "Low Stock",
    fullStock: "Full Stock",
    normalStock: "Normal Stock",
    regularItems: "Regular Items",
    blumItems: "Blum Items",
    filterDescription: "Toggle between regular and Blum items",
    noRegularItems: "No regular items found in this warehouse",
    noBlumItems: "No Blum items found in this warehouse",
    itemDetailModal: "Item Details",
    viewItemDetail: "View Item Details",
    viewItemDetails: "View Item Details",
    availability: "Availability",
    reservedItems: "Reserved Items",
    pieces: "Pieces",

    pricingInfo: "Pricing Information",
    unitCost: "Unit Cost",
    soloPrice: "Single Unit Price",
    bulkPrice: "Bulk Price",
    unitPrice: "Unit Price",
    costPerUnit: "Cost per Unit (bulk)",
    singleUnitPrice: "Single Unit Price",
    bulkUnitPrice: "Bulk Unit Price",
    standardPrice: "Standard Sale Price",

    stockOverview: "Stock Overview",
    totalUnits: "Total Units in Stock",
    totalUnitsDesc: "Base unit quantity",
    reservedUnits: "Reserved Units",
    availableUnits: "Available for Sale",

    packageConfiguration: "Package Configuration",
    packageDesc: "How units are organized into packets and packages",
    packageUnits: "Package Units",
    packageUnitsDesc: "Units per package",
    packetUnits: "Packet Units",
    packetUnitsDesc: "Units per packet",

    currentBreakdown: "Current Stock Breakdown",
    breakdownDesc: "How total units are currently organized",
    completePackages: "Complete Packages",
    completePackets: "Complete Packets",
    loosePieces: "Loose Pieces",
    individualUnits: "Individual units not in full packets/packages",

    verification: "Verification",
    units: "Units",

    stockHigh: "Stock Level: High",
    stockMedium: "Stock Level: Medium",
    stockLow: "Stock Level: Low",
    stockOut: "Out of Stock",
    lastUpdated: "Stock levels as of now",
    reserved: "Reserved",
    reasonRequired: "Reason is required",

    inventoryInfo: "Inventory Information",
    packageInfo: "Package Information",
    totalQuantity: "Total Quantity",
    reservations: "Reserved Items",
    position: "Position",
    packets: "Packets",
    packages: "Packages",
    availableForSale: "Available for Sale",

    adjust: "Adjust Stock",
    adjustStock: "Adjust Stock",
    currentQuantity: "Current Quantity",
    add: "Add to Stock",
    remove: "Remove from Stock",
    addToQueue: "Add to Queue",
    adjustmentAdded: "Adjustment added to queue",
    submitAdjustments: "Submit All",
    confirmAdjustments: "Confirm Stock Adjustments",
    aboutToAdjust: "You are about to adjust stock for the following items:",
    confirmSubmit: "Confirm and Submit",
    adjustmentSuccess: "Stock adjustments applied successfully",
    adjustmentError: "Failed to adjust stock",

    selectBranchFirst: "Select Branch First",
    noWarehousesAvailable: "No warehouses available",
    selectBranchFirstHelp: "Please select a branch before choosing a warehouse",
    selectWarehouseHelp: "Select a warehouse for this transaction",
    branchRequiredForSelection: "Branch is required to select a warehouse",
    warehouseSelectionDisabled: "Warehouse selection is disabled",
    items: "Items"
  },
  StockMovement: {
    title: "Stock Movement",
    name: "Item",
    oldQuantity: "Previous Quantity",
    quantityChange: "Quantity Change",
    newQuantity: "New Quantity",
    reason: "Reason",
    createdAt: "Date",
  },
  employee: {
    image: "Image",
    addNew: "Add New Employee",
    updateEmployee: "Update Employee",
    employee: "Employee",
    dashboardTitle: "Employee Dashboard",
    managingUsers: "Managing System Employees",
    totalEmployees: "Total Employees",
    searchLabel: "Search by Name or Username",
    resetFilters: "Reset Filters",
    branchFilter: "Filter by Branch",
    genderFilter: "Filter by Gender",
    addNote: "Add Note",
    name: "Name",
    username: "Username",
    role: "Role",
    phone: "Phone Number",
    branch: "Branch",
    gender: "Gender",
    male: "Male",
    female: "Female",
    personalInfo: "Personal Information",
    accountInfo: "Account Information",
    password: "Password",
    passwordHint: "Leave blank to keep current password",
    confirmPassword: "Confirm Password",
    profileImage: "Profile Image",
    newUser: "New Employee",
    fetchError: "Failed to fetch employee data:",
    lastActivity: "Last Activity",
    roles: {
      cashier: "Cashier",
      manager: "Manager",
      sales: "Sales",
      inventory: "Inventory",
    },
    permissions: {
      title: "Permissions",
      adjustments: "Stock Adjustments",
    },
  },
  location: {
    title: "Location Management",
    subtitle: "Manage geographical locations in the system",
    dashboardTitle: "Location Dashboard",
    managingLocations: "Managing System Locations",
    addNew: "Add New Location",
    update: "Update Location",
    viewDetails: "View Details",
    delete: "Delete",
    deleteConfirm: "Are you sure you want to delete this location?",
    searchLabel: "Search by location name",
    resetFilters: "Reset Filters",
    name: "Name",
    type: "Type",
    parent: "Parent Location",
    phoneCode: "Phone Code",
    timezone: "Timezone",
    actions: "Actions",
    basicInfo: "Basic Information",
    additionalInfo: "Additional Information",
    info: "Location Information",
    details: "Additional Details",
    newLocation: "New Location",
    locationDetails: "Location Details",
    typeFilter: "Filter by Type",
    addBtn: "Add Location",
    updateBtn: "Update Location",
    role: "Location",
    fetchError: "Failed to fetch location details:",
    addSuccess: "Location added successfully",
    updateSuccess: "Location updated successfully",
    country: "Country",
    state: "State",
    city: "City",
    district: "District",
    area: "Area",
  },
  branch: {
    title: "Branch Management",
    subtitle: "Manage branches and warehouses",
    myBranch: "My Branch",
    myBranchSubtitle: "Manage your branch operations",
    addNew: "Add New Branch",
    update: "Update Branch",
    details: "Branch Details",
    delete: "Delete Branch",
    allBranches: "All Branches",
    warehouse: "Warehouse",
    warehouseItems: "Warehouse Items",
    cashbox: "Cashbox",
    performance: "Performance",
    capacity: "Capacity",
    report: "Report",
    viewCashbox: "View Cashbox",
    viewReport: "View Report",
    name: "Name",
    code: "Branch Code",
    location: "Location",
    phone: "Phone Number",
    status: "Status",
    active: "Active",
    inactive: "Inactive",
    actions: "Actions",
    addBtn: "Add Branch",
    updateBtn: "Update Branch",
    viewWarehouses: "View Warehouses",
    noWarehouses: "No warehouses for this branch",
    searchLabel: "Search by name or location",
    resetFilters: "Reset Filters",
    locationFilter: "Filter by Location",
    statusFilter: "Filter by Status",
    basicInfo: "Basic Information",
    contactInfo: "Contact Information",
    selectLocation: "Please select a location",
    locationId: "Location",
    toggleActive: "Toggle Active/Inactive",

    // New Transaction Modal branch keys
    noResults: "No results found",
    selectBranchHelp: "Select a branch for this transaction",

    // Table headers
    tableHeaders: {
      name: "Branch Name",
      code: "Branch Code",
      location: "Location",
      phone: "Phone Number",
      status: "Status",
      actions: "Actions",
    },

    employeeDashboard: {
      users: "Users",
      items: "Products",
      item: "Product",
      warehouses: "Warehouses",
      capacity: "Capacity",
      itemsQuantity: "Product Quantity",
      itemsCount: "Product Count",
      itemsCost: "Product Cost",
      cashboxBalance: "Cashbox Balance",
      showCashbox: "Show Cashbox",
      useDoubleClickForHide: "Double-click to hide",
      useDoubleClickForShow: "Double-click to show",
      refreshDashboard: "Refresh Dashboard",

      recentExpenses: "Recent Expenses",
      noExpenses: "No expenses recorded yet",

      recentPurchases: "Recent Purchases",
      noPurchases: "No purchases recorded yet",

      recentSales: "Recent Sales",
      noSales: "No sales recorded yet",

      recentActivities: "Recent Activities",
      noActivities: "No activities performed yet",

      usdToIqdRate: "USD to IQD Rate",
      euroToUsdRate: "EUR to USD Rate",
      lastUpdated: "Last Updated",
    },

    purchaseBorrow: "Purchase Borrow",
    sellBorrow: "Sell Borrow",
  },
  branchReport: {
    title: "Branch Report",
    subtitle: "Warehouse items report for the selected branch",
    adminOnly: "Only admins can view branch reports",
    totalItems: "Total Items",
    totalQuantity: "Total Quantity",
    totalValue: "Total Value",
    totalUnitCostUSD: "Total Unit Cost (USD)",
    totalUnitCostIQD: "Total Unit Cost (IQD)",
    totalReservations: "Total Reservations",
    exportReport: "Export Report",
    exportCSV: "Export CSV",
    exportPDF: "Export PDF",
    pdfError: "Error generating PDF. Please try again or use CSV export.",
    noDataAvailable: "No data available for this branch",

    columns: {
      itemName: "Item Name",
      categoryName: "Category Name",
      sales: "Sales",
      quantity: "Quantity",
      reservations: "Reservations",
      unitCost: "Unit Cost",
      totalCost: "Total Cost",
      soloPrice: "Single Price",
      bulkPrice: "Bulk Price",
      packetUnits: "Packet Units",
      packageUnits: "Package Units",
    },

    actions: {
      viewDetails: "View Details",
      exportItem: "Export Item",
    },
  },

  itemCategory: {
    title: "Item Categories",
    subtitle: "Manage item categories",
    addNew: "Add New Category",
    update: "Update Category",
    delete: "Delete Category",
    name: "Name",
    description: "Description",
    status: "Status",
    actions: "Actions",
    searchLabel: "Search by name",
    resetFilters: "Reset Filters",
    statusFilter: "Filter by Status",
    searchResults: "Search Results for",
    categoriesFound: "Category Found",
    clearSearch: "Clear Search",
    addBtn: "Add Category",
    updateBtn: "Update Category",
    parentCategory: "Parent Category",
    categoryInfo: "Category Information",
    newCategory: "New Category",
    toggleStatus: "Toggle Status",
  },

  customer: {
    addNew: "Add New Customer",
    update: "Update Customer",
    customer: "Customer",
    supplier: "Supplier",
    newCustomer: "New Customer",
    dashboardTitle: "Customer Management",
    managingCustomers: "Manage Customers and Suppliers",
    totalCustomers: "Total Customers",
    searchLabel: "Search by Name or Phone Number",
    resetFilters: "Reset Filters",
    typeFilter: "Filter by Type",
    customerInfo: "Customer Information",
    locationInfo: "Location Information",
    firstName: "First Name",
    lastName: "Last Name",
    primaryPhone: "Primary Phone",
    secondPhone: "Secondary Phone",
    type: "Type",
    place: "Place",
    location: "Location",
    createAccount: "Create Account",
    viewDetails: "View Details",
    fetchError: "Failed to fetch customer data:",
    createSuccess: "Customer created successfully",
    updateSuccess: "Customer updated successfully",
    addBtn: "Add Customer",
    updateBtn: "Update Customer",
    columns: {
      id: "ID",
      name: "Name",
      type: "Type",
      phone: "Phone",
      place: "Place",
      location: "Location",
      createdAt: "Created At",
      sellBorrow: "Our Credit Balance",
      purchaseBorrow: "Customer Credit Balance",
      actions: "Actions",
      lastBorrowDate: "Last Borrow Date",
      nextPaymentDate: "Next Payment Date",
      paymentCycleDays: "Payment Cycle Days",
    },

    // Customer Details Modal
    customerDetails: "Customer Details",
    viewCustomerInformation: "View Detailed Customer Information",
    basicInformation: "Basic Information",
    locationInformation: "Location Information",
    creditInformation: "Credit Information",
    additionalInformation: "Additional Information",
    weOwe: "We Owe",
    theyOwe: "They Owe",
    ourDebtToSupplier: "Amount we owe to this supplier",
    customerDebtToUs: "Amount this customer owes us",
    accountStatus: "Account Status",
    hasAccount: "Has Account",
    noAccount: "No Account",
    note: "Notes",
    printDetails: "Print Details",
    printing: "Printing...",
    printSuccess: "Customer details sent to printer successfully",
    printFailed: "Failed to print customer details",
    noCustomerData: "No customer data",
    customerNotFound: "Customer information not found",

    // Print Template Translations
    print: {
      companyName: "Bazargani ERP",
      documentTitle: "Customer Details Report",
      generatedOn: "Generated On",
      basicInformationTitle: "Basic Information",
      creditInformationTitle: "Credit Information",
      customerId: "Customer ID",
      customerType: "Type",
      fullName: "Full Name",
      phoneNumber: "Phone Number",
      place: "Place",
      location: "Location",
      createdDate: "Created Date",
      weOweSupplier: "We owe the supplier",
      customerOwesUs: "Customer owes us",
      supplierDebtDescription: "This is the amount we owe the supplier for purchases",
      customerDebtDescription: "This is the amount the customer owes us for purchases",
      footerNote: "This document was automatically generated by Bazargani ERP.",
      contactNote: "For questions or inquiries, please contact the system administrator."
    },

    // New User Account Creation
    accountCreated: "Account created successfully!",
    newUserAccountMessage: "A new user account has been created for this customer",
    newCustomerAccount: "Customer Account",
    username: "Username",
    password: "Password",
    id: "ID",
    securityWarning: "Important Security Notice",
    passwordWarning:
      "This password will be displayed only once. Please copy it and share it securely with the customer immediately.",
    copyPassword: "Copy Password",
    copyCredentials: "Copy All Credentials",
    passwordCopied: "Password copied",
    credentialsCopied: "All credentials copied",
    copyFailed: "Copy failed",

    // New Transaction Modal customer keys
    searchSupplier: "Search Supplier",
    searchCustomer: "Search Customer",
    noSuppliersFound: "No suppliers found",
    noCustomersFound: "No customers found",
    searchingSuppliers: "Searching suppliers...",
    searchingCustomers: "Searching customers...",
    searchResults: "Search Results",
    tryDifferentSearch: "Try a different search",

    // Borrow Modal
    borrow: {
      title: "Create Customer Debt",
      subtitle: "Add a debt amount for this customer",
      amountLabel: "Debt Amount (USD)",
      amountPlaceholder: "Enter amount in USD",
      amountRequired: "Debt amount is required",
      amountMustBePositive: "Amount must be greater than 0",
      noteLabel: "Note (Optional)",
      notePlaceholder: "Add a note about this debt...",
      summary: "Debt Summary",
      borrowAmount: "Debt Amount",
      newBorrowAmount: "New Debt Amount",
      previousBorrowAmount: "Previous Debt",
      totalBorrowAmount: "Total Debt Amount",
      customer: "Customer",
      createBorrow: "Create Debt",
      previousAmount: "Previously Borrowed Amount",
      hasDebt: "Has Remaining Debt",
      noDebt: "No Remaining Debt",
      success: {
        title: "Debt Created Successfully!",
        message: "A debt of ${amount} has been added for customer {customer}"
      },
      error: {
        title: "Failed to Create Debt",
        message: "Please try again or contact support"
      }
    },

    borrowPerBranch: 'Debt Amount Per Branch',

    borrowedFromBranchFilter: 'Borrowed From Branch',

    purchaseBorrow: "Purchase Borrow",
    totalPurchaseDebt: "Total Purchase Debt",
    sellBorrow: "Sell Borrow",
    totalSellDebt: "Total Sell Debt",

    paymentCycleDays: "Payment Cycle Days",
    lastBorrowDate: "Last Borrow Date",
    nextPaymentDate: "Next Payment Date",

    phoneExists: "This mobile number is already registered!",
  },
  common: {
    day: "Day",
    edit: "Edit",
    delete: "Delete",
    cancel: "Cancel",
    dismiss: "Dismiss",
    branch: "Branch",
    save: "Save",
    submit: "Submit",
    close: "Close",
    view: "View",
    remove: "Remove",
    clear: "Clear",
    search: "Search",
    errorOccurred: "An error occurred",
    actions: "Actions",
    optional: "Optional",
    active: "Active",
    inactive: "Inactive",
    noDataAvailable: "No data available",
    notAvailable: "Not available",
    notSet: "Not set",
    address: "Address",
    toggleFilters: "Toggle Filters",
    status: "Status",
    createdAt: "Created At",
    euro: "Euro",
    usd: "USD",
    iqd: "IQD",
    iqdPerUsd: "IQD per USD",
    date: "Date",
    fromDate: "From Date",
    toDate: "To Date",
    today: "Today",
    thisWeek: "This Week",
    thisMonth: "This Month",
    loading: "Loading",
    note: "Note",
    required: "Required",
    quantity: "Quantity",
    clearFilters: "Clear Filters",
    allCategories: "All Categories",
    add: "Add",
    reset: "Reset",
    continue: "Continue",
    back: "Back",
    noNote: "No Note",
    units: "Units",
    item: "Item",
    items: "Items",
    itemMovements: "Item Movements",
    noResults: "No results found",
    clearAll: "Clear All",
    applyFilter: "Apply Filter",
    clearFilter: "Clear Filter",
    confirmClose: "Confirm Close",
    previous: "Previous",
    next: "Next",
    notes: "Notes",
    error: "Error",
    cashbox: "Cashbox",
    warehouses: "Warehouses",
    creating: "Creating...",
    updating: "Updating...",
    ellipsis: "...",
    warning: "Warning",
    approvalRequired: "Your request requires manager approval",
  },

  invoice: {
    information: "Invoice Information",
    no: "No.",
    oldBorrowedPrice: "Old Borrowed Price",
    newBorrowedPrice: "New Borrowed Price",
    discount: "Discount",
    totalMoney: "Total Amount",
    paidAmount: "Paid Amount",
    unpaidAmount: "Unpaid Amount",
    amountLeftToPay: "Amount Left to Pay",
    header: {
      companyName: "Bazargani Deroost",
      companyAddress: "Sulaymaniyah, Kurdistan Region, Iraq",
      companyPhone: "+964 770 153 2089",
      companyEmail: "true.trading23@gmail.com",
      companyTagline: "General Trading",
      invoiceNumber: "Invoice #",
    },
    types: {
      invoice: "Invoice",
      purchaseInvoice: "Purchase Invoice",
      salesInvoice: "Sales Invoice",
      purchase: "Purchase",
      sale: "Sale",
    },
    details: {
      title: "Invoice Details",
      transactionType: "Transaction Type",
      supplier: "Supplier",
      customer: "Customer",
      warehouse: "Warehouse",
      paymentMethod: "Payment Method",
      exchangeRate: "Exchange Rate (USD to IQD)",
      rateDate: "Rate Date",
      date: "Date",
      status: "Status",
      billingTo: "Billing To",
      name: "Name",
      phone: "Phone",
      type: "Type",
      reference: "Reference",
    },
    payment: {
      title: "Payment Information",
      method: "Payment Method",
      status: "Payment Status",
      amounts: "Payment Amounts",
      returns: "Returns",
      cash: "Cash",
      credit: "Credit",
      cashPayment: "Cash Payment",
      creditBorrow: "On Credit",
      notSpecified: "Not Specified",
      paySupplier: {
        title: "Pay Supplier",
        subtitle: "Process a supplier payment for outstanding balance",
        transactionDetails: "Transaction Details",
        totalAmount: "Total Amount",
        paidAmount: "Paid Amount",
        remainingAmount: "Remaining Amount",
        supplierLabel: "Supplier",
        supplierPlaceholder: "Select a supplier",
        supplierRequired: "Supplier is required",
        noSuppliersAvailable: "No suppliers available",
        paymentTypeLabel: "Payment Type",
        cashPayment: "Cash Payment",
        creditPayment: "Credit Payment",
        exchangeRateLabel: "Exchange Rate",
        refreshRate: "Refresh Exchange Rate",
        paymentAmountsLabel: "Payment Details",
        iqdAmountLabel: "IQD Amount",
        enterIqdAmount: "Enter IQD Amount",
        usdAmountLabel: "USD Amount",
        enterUsdAmount: "Enter USD Amount",
        iqdReturnLabel: "IQD Return",
        enterIqdReturn: "Enter IQD Return Amount",
        usdReturnLabel: "USD Return",
        enterUsdReturn: "Enter USD Return Amount",
        paymentSummary: "Payment Summary",
        totalPayment: "Total Payment",
        totalReturn: "Total Return",
        netAmount: "Net Payment Amount",
        totalAmountLabel: "Total Payment Amount",
        maxAmount: "Maximum Amount",
        amountPlaceholder: "Enter Payment Amount",
        amountRequired: "Payment amount is required",
        amountMustBeGreater: "Amount must be greater than 0",
        amountExceedsRemaining: "Amount exceeds remaining balance (Max: {max})",
        payAll: "Pay All",
        noteLabel: "Note",
        notePlaceholder: "Add a note for this payment (optional)",
        cancel: "Cancel",
        makePayment: "Make Payment",
        exchangeRateRefreshed: "Exchange rate updated successfully",
        exchangeRateRefreshError: "Failed to refresh exchange rate",
        success: {
          paymentSuccessful: "Payment processed successfully",
        },
        errors: {
          allFieldsRequired: "Please fill in all required fields",
          paymentFailed: "Payment failed. Please try again",
        },
      },
      receiveFromCustomer: {
        title: "Receive from Customer",
        subtitle: "Process a payment received from customer for outstanding balance",
        transactionDetails: "Transaction Details",
        totalAmount: "Total Amount",
        paidAmount: "Paid Amount",
        remainingAmount: "Remaining Amount",
        customerLabel: "Customer",
        customerPlaceholder: "Select a customer",
        customerRequired: "Customer is required",
        noCustomersAvailable: "No customers available",
        exchangeRateLabel: "Exchange Rate",
        refreshRate: "Refresh Exchange Rate",
        paymentAmountsLabel: "Payment Details",
        iqdAmountLabel: "IQD Amount",
        enterIqdAmount: "Enter received IQD amount",
        usdAmountLabel: "USD Amount",
        enterUsdAmount: "Enter received USD amount",
        iqdReturnLabel: "IQD Return",
        enterIqdReturn: "Enter IQD Return Amount",
        usdReturnLabel: "USD Return",
        enterUsdReturn: "Enter USD Return Amount",
        paymentSummary: "Payment Summary",
        totalPayment: "Total Received",
        totalReturn: "Total Return",
        netAmount: "Net Amount Received",
        receiveAll: "Receive All",
        noteLabel: "Note",
        notePlaceholder: "Add a note for this payment (optional)",
        cancel: "Cancel",
        receivePayment: "Receive Payment",
        exchangeRateRefreshed: "Exchange rate updated successfully",
        exchangeRateRefreshError: "Failed to refresh exchange rate",
        success: {
          paymentSuccessful: "Payment received successfully",
        },
        errors: {
          allFieldsRequired: "Please fill in all required fields",
          paymentAmountRequired:
            "Please enter at least one payment amount (IQD or USD)",
          paymentFailed: "Failed to record payment. Please try again",
          transactionDataRequired: "Transaction data is required",
          customerIdMissing: "Customer ID missing from transaction data",
          transactionIdRequired: "Transaction ID is required",
        },
      },
      bulkPayment: {
        title: "Customer Bulk Payment",
        subtitle: "Process a bulk payment received from customer",
        customerDetails: "Customer Details",
        customerName: "Customer Name",
        customerPhone: "Phone Number",
        customerType: "Customer Type",
        outstandingDebt: "Outstanding Debt",
        exchangeRateLabel: "Exchange Rate",
        refreshRate: "Refresh Exchange Rate",
        paymentAmountsLabel: "Payment Details",
        iqdAmountLabel: "IQD Amount",
        enterIqdAmount: "Enter received IQD amount",
        usdAmountLabel: "USD Amount",
        enterUsdAmount: "Enter received USD amount",
        iqdReturnLabel: "IQD Return",
        enterIqdReturn: "Enter IQD Return Amount",
        usdReturnLabel: "USD Return",
        enterUsdReturn: "Enter USD Return Amount",
        paymentSummary: "Payment Summary",
        totalPayment: "Total Payment",
        totalReturn: "Total Return",
        netPayment: "Net Payment",
        noteLabel: "Note",
        notePlaceholder: "Add a note for this payment (optional)",
        processPayment: "Process Payment",
        exchangeRateRefreshed: "Exchange rate updated successfully",
        exchangeRateRefreshError: "Failed to refresh exchange rate",
        success: {
          paymentSuccessful: "Bulk payment processed successfully",
        },
        errors: {
          customerRequired: "Customer information is required",
          paymentAmountRequired: "Please enter at least one payment amount (IQD or USD)",
          discountMustBePositive: "Discount must be a positive number",
          discountMaximum100: "Discount cannot exceed 100%",
          forgivenPriceMustBePositive: "Forgiven amount must be positive",
          forgivenPriceHint: "Amount to forgive from customer debt",
          paymentFailed: "Failed to process bulk payment. Please try again",
        },
      },
    },
    items: {
      title: "Products",
      serialNumber: "S/N",
      description: "Description",
      sku: "SKU",
      quantity: "Quantity",
      unitPrice: "Unit Price",
      unitPriceUSD: "Unit Price (USD)",
      unitPriceIQD: "Unit Price (IQD)",
      total: "Total",
      totalIQD: "Total (IQD)",
    },
    totals: {
      title: "Financial Summary",
      subtotal: "Subtotal",
      subtotalIQD: "Subtotal (IQD)",
      totalAmount: "Total Amount",
      totalAmountIQD: "Total Amount (IQD)",
      amountPaid: "Amount Paid",
      amountPaidIQD: "Amount Paid (IQD)",
      balanceDue: "Balance Due",
      balanceDueIQD: "Balance Due (IQD)",
      tax: "Tax",
      discount: "Discount",
    },
    subtotal: "Subtotal",
    notes: {
      title: "Notes",
    },
    footer: {
      thankYou: "Thank you for working with us!",
      signature: "Authorized Signature",
      accountManager: "Account Manager",
      generatedOn: "Generated On",
      exchangeRateInfo: "Exchange Rate: 1 USD = {rate} IQD",
      copyright: "All Rights Reserved 2025 ©",
      phone: ""
    },
    actions: {
      loading: "Loading transaction data...",
      switchCurrency: "Switch Currency",
      convertTo: "Convert to {currency}",
      printInvoice: "Print Invoice",
      close: "Close",
    },
    currency: {
      title: "Currency",
      usd: "USD",
      iqd: "IQD",
    },
  },
  logs: {
    title: "Activity Logs",
    subtitle: "Track system activities and audit trails",
    searchLabel: "Search by user, action, or entity",
    resetFilters: "Reset",
    entity: "Entity Type",
    platform: "Platform",
    viewDetails: "View Details",

    activityDetails: "Activity Details",
    detailedInformation: "Detailed information about this activity",
    userInformation: "User Information",
    actionInformation: "Action Information",
    systemInformation: "System Information",
    entityType: "Entity Type",
    entityId: "Entity ID",
    timestamp: "Timestamp",
    ipAddress: "IP Address",
    browser: "Browser",
    dataChanges: "Data Changes",
    previousData: "Previous Data",
    newData: "New Data",
    createdData: "Created Data",
    oldData: "Old Data",
    noDataChanges: "No data changes recorded",
    userDetails: "User Details",
    name: "Name",
    username: "Username",
    phone: "Phone",
    role: "Role",
    type: "Type",
    gender: "Gender",
    male: "Male",
    female: "Female",
    noLogSelected: "No log selected",
    deviceInfo: "Device Information",

    columns: {
      user: "User",
      action: "Action",
      platform: "Platform",
      ipAddress: "IP Address",
      timestamp: "Timestamp",
      actions: "Actions",
    },
  },

  blumTransaction: {
    title: "Blum Transaction",
    subtitle: "Manage Blum transactions and inventory components",
    paid: "Paid",

    invoice: "Blum Invoice",
    purchaseInvoice: "Blum Purchase Invoice",
    sellInvoice: "Blum Sales Invoice",
    purchase: "Purchase",
    sell: "Sell",
    sale: "Sale",
    items: "Items",
    sets: "Sets",
    added: "Added",
    itemSingular: "Item",
    itemPlural: "Items",

    searchItems: "Search Items",
    searchSets: "Search Sets",
    searchItem: "Search for an item...",
    searchSet: "Search for a set...",
    searchResults: "Search Results",
    selectedItems: "Selected Items",
    individualItems: "Individual Items",

    totalQuantity: "Total Quantity",
    unitCost: "Unit Cost",
    unitPriceUSD: "Unit Price (USD)",
    totalUSD: "Total (USD)",
    available: "Available",
    moreItems: "More Items",
    components: "Components",
    created: "Created",
    setId: "Set ID",
    setQuantity: "Set Quantity",
    formatCurrency: "Format Currency",
    blumTransactionId: "Blum Transaction ID",
    quantity: "Quantity",
    unitPrice: "Unit Price",
    total: "Total",
    setUnitPrice: "Set Unit Price",
    setTotal: "Set Total",
    configureSetItems: "Configure Set Items",

    noAvailableQuantity: "This item has no available quantity",
    quantityExceedsAvailable: "Quantity cannot exceed available stock ({quantity})",
    quantityMinimum: "Quantity must be at least 1",

    addNew: "Add new {type} transaction",
    addSellTransaction: "Add Sell Transaction",
    addPurchaseTransaction: "Add Purchase Transaction",
    newSellTransaction: "New Sell Transaction",
    newPurchaseTransaction: "New Purchase Transaction",
    sellTransaction: "Sell Transaction",
    purchaseTransaction: "Purchase Transaction",
    sellTransactionDesc: "Complete a sale for a customer",
    purchaseTransactionDesc: "Record a purchase from a supplier",

    basicInfo: "Basic Information",
    searchCustomer: "Search Customer",
    searchSupplier: "Search Supplier",
    paymentType: "Payment Type",
    warehouse: "Warehouse",
    discountRate: "Discount Rate",
    currentExchangeRates: "Current Exchange Rates",
    exchangeRates: "Exchange Rates",
    usdIqdRate: "USD to IQD Rate",
    eurUsdRate: "EUR to USD Rate",
    refreshRate: "Refresh Rate",
    lastUpdated: "Last Updated",

    searchingItems: "Searching Items",
    leaveEmptyToShowAll: " (leave empty to show all)",

    paymentTypes: {
      cash: "Cash",
      credit: "Credit",
      cashPayment: "Cash Payment",
      creditBorrow: "Credit",
      notSpecified: "Not Specified",
    },

    steps: {
      basicInfo: "Basic Information",
      basicInfoDesc: "Enter the basic transaction information",
      basicInfoSellDesc: "Select the customer and sales details",
      basicInfoPurchaseDesc: "Select the supplier and purchase details",
      itemSelection: "Item Selection",
      itemSelectionDesc: "Choose items or sets for this transaction",
      details: "Details",
      detailsDesc: "Complete transaction details",
      summary: "Summary",
      summaryDesc: "Review and complete the transaction",
    },

    validation: {
      required: "This field is required",
      nameRequired: "Name is required",
      customerRequired: "Customer selection is required",
      branchRequired: "Branch selection is required",
      warehouseRequired: "Warehouse selection is required",
      paymentTypeRequired: "Payment type selection is required",
      discountRateInvalid: "Discount rate must be between 0 and 100",
      positiveNumber: "Must be a positive number",
      integerRequired: "Must be an integer",
      minLength: "Must be at least {min} characters",
      passwordMatch: "Passwords must match",
      paymentCycleRange: "Must be between 1 and 365"
    },

    error: {
      somethingWentWrong: "Something went wrong",
      appCrashed: "The app encountered an unexpected error. Try refreshing the page or contact support if the problem persists.",
      refreshPage: "Refresh Page",
      goHome: "Go Home",
      showDetails: "Show Details",
      hideDetails: "Hide Details",
      technicalDetails: "Technical Details",
    },

    createTransaction: "Create Transaction",
    confirmCloseMessage: "You have unsaved changes. Are you sure you want to close without saving?",
    fillAllRequiredFields: "Please fill all required fields before continuing",
    selectBranchRequired: "Selecting a branch is required",
    createdSuccessfully: "Transaction created successfully",
    errorCreatingTransaction: "Failed to create transaction. Please try again.",

    invoiceDetails: "Invoice Details",
    invoiceNo: "Invoice No.",
    date: "Date",
    status: "Status",
    currency: "Currency",
    billingTo: "Billing To",
    name: "Name",
    phone: "Phone",
    fphone: "Primary Phone",
    sphone: "Secondary Phone",
    type: "Type",
    individual: "Individual",
    transactionType: "Transaction Type",
    purchaseBlumTransaction: "Blum Purchase Transaction",
    salesBlumTransaction: "Blum Sales Transaction",
    sl: "No.",
    itemDescription: "Item Description",
    qty: "Quantity",
    price: "Price",
    amount: "Amount",
    subtotal: "Subtotal",
    balance: "Balance",
    paymentInformation: "Payment Information",
    reference: "Reference",
    note: "Note",
    thankYou: "Thank you for doing business with us",
    authorizedSignature: "Authorized Signature",
    accountManager: "Account Manager",
    website: "Website",
    address: "Address",
    usdCurrency: "USD (US Dollar)",
    iqdCurrency: "IQD (Iraqi Dinar)",
    convertToUsd: "Convert to USD",
    convertToIqd: "Convert to IQD",
    printInvoice: "Print Invoice",
    close: "Close",
  },

  transactionAlpha: {
    searchItems: "Search Items",
    search: "Search",
    sku: "SKU",
    qty: "Quantity",
    pkg: "Package",
    pkt: "Packet",
    pcs: "Piece",
    category: "Category",
    pieces: "Pieces",
    total: "Total",
    stock: "Stock",
    inStock: "In Stock",
    noItemsFound: "No items found.",
    selectedItems: "Selected Items",
    packages: "Packages",
    packageHint: "1 package = {n} packet(s)",
    packets: "Packets",
    packetHint: "1 packet = {n} piece(s)",
    quantity: "Quantity",
    totalItems: "Total Items: {n}",
    unitCost: "Unit Cost",
    unitPrice: "Unit Price",
    soloUnitCost: "Solo Unit Cost",
    soloUnitPrice: "Solo Unit Price",
    bulkUnitCost: "Bulk Unit Cost",
    bulkUnitPrice: "Bulk Unit Price",
    clearAll: "Clear All",
    selectAllItems: "Select All Items",
    selectBranch: "Select Branch",
    typeToSearchBranches: "Type to search branches",
    selectCustomer: "Select Customer",
    typeToSearchCustomers: "Type to search customers",
    clearSelection: "Clear Selection",
    failedToFetchCustomers: "Failed to fetch customers.",
    selectWarehouse: "Select Warehouse",
    typeToSearchWarehouses: "Type to search warehouses",
    selectPaymentType: "Select Payment Type",
    cash: "Cash",
    borrow: "Credit",
    bank: "Bank",
    transfer: "Transfer",
    credit: "Credit",
    debit: "Debit",
    other: "Other",
    transactionTitle: "Transaction – {type}",
    customerAndTransactionDetails: "Customer & Transaction Details",
    supplierAndTransactionDetails: "Supplier & Transaction Details",
    transactionStatus: "Transaction Status",
    complete: "Complete",
    reserved: "Reserved",
    itemSelection: "Item Selection",
    debtPaymentSection: "Debt / Payment Section",
    usdIqd: "USD / IQD",
    supplier: "Supplier",
    weOweSupplier: "We owe the supplier",
    totalPriceOfSelectedItems: "Total Price of Selected Items",
    newTotalOwed: "New Total Owed (after this transaction)",
    customer: "Customer",
    customerOwesUs: "Customer owes us",
    totalPriceBeforeDiscount: "Total Price Before Discount",
    discountPercent: "Discount (%)",
    totalPriceAfterDiscount: "Total Price After Discount",
    note: "Note",
    addNoteOptional: "Add a note (optional)",
    submitTransaction: "Submit Transaction",
    pleaseFillAllRequired: "Please fill all required fields and select at least one item.",
    transactionSubmitted: "Transaction submitted successfully!",
    transactionFailed: "Transaction submission failed.",

    basicInfo: "Basic Information",
    review: "Review & Submit",
    purchaseSubtitle: "Record a purchase from supplier",
    sellSubtitle: "Complete a sale to customer",
    financialSummary: "Financial Summary",

    paymentToSupplier: "Payment to Supplier",
    paymentFromCustomer: "Payment from Customer",
    iqdAmountWePay: "IQD Amount We Pay",
    iqdAmountCustomerPays: "IQD Amount Customer Pays",
    usdAmountWePay: "USD Amount We Pay",
    usdAmountCustomerPays: "USD Amount Customer Pays",
    iqdReturnFromSupplier: "IQD Return from Supplier",
    iqdReturnToCustomer: "IQD Return to Customer",
    usdReturnFromSupplier: "USD Return from Supplier",
    usdReturnToCustomer: "USD Return to Customer",
    enterIqdAmount: "Enter IQD Amount",
    enterUsdAmount: "Enter USD Amount",
    enterIqdReturnAmount: "Enter IQD Return Amount",
    enterUsdReturnAmount: "Enter USD Return Amount",
    forgivenPrice: "Forgiven Amount",
    enterForgivenAmount: "Enter Forgiven Amount",
    forgivenPriceHint: "Amount forgiven if customer does not pay",
    forgivenPriceMustBePositive: "Forgiven amount cannot be negative",
    selectBranchToUpdate: "Please select a branch to update this transaction",
    pleaseSelectBranch: "Please select a branch to continue",
    paymentAmountRequired: "Payment amount is required for cash transactions",
    filterByCategory: "Filter by Category",
    noCategoryItems: "No items found in selected category",
    tryDifferentSearch: "Try a different search term",
    searchingItems: "Searching items...",
    availableItems: "Available Items",
    items: "Items",
    selected: "Selected",
    loadingMoreItems: "Loading more items...",
    allItemsLoaded: "All items loaded",
    totalItemsCount: "Total: {count} items",
    cashboxOpened: "Cashbox Opened",
    cashboxClosed: "Cashbox Closed",
    cashboxMustBeOpened: "Cashbox must be opened before processing transactions",
    cashboxNotOpened: "Cashbox is not opened!",
    loadingTransaction: "Loading transaction details...",
    transactionNotEditable: "Transaction is not editable",
    transactionCannotBeModified: "This transaction cannot be modified",
    openCashboxFirst: "Please open the cashbox first to perform transactions",
    cannotProcessTransaction: "Cannot process transaction",
    unableToCheckCashboxStatus: "Unable to check cashbox status",
    verifyBranchSelection: "Please verify branch selection and try again",
    cashboxStatusCheckFailed: "Failed to check cashbox status",
    checkConnectionAndTryAgain: "Please check your connection and try again",
    forgivenPriceTooltip: "Amount forgiven if customer does not pay",

    dueDate: "Due Date",
    dueDateTooltip: "Due date for determining and collecting payment for this transaction",
  },
  dashboard: {
    title: "Dashboard",
    subtitle: "Your warehouse at a glance",
    tagline: "Smart solutions for a better future",
    refresh: "Refresh Dashboard",
    refreshSuccess: "Dashboard updated successfully",
    refreshError: "Failed to update dashboard",
    overview: "Overview",
    recentActivities: "Recent Activities",
    recentActivitiesSubtitle: "Latest system activities and events",
    viewAll: "View All",
    refreshActivities: "Refresh Activities",
    noActivities: "No recent activities",
    loadingActivities: "Loading activities...",
    branchPerformance: "Branch Performance",
    branchPerformanceSubtitle: "Overview of top-performing branches",
    viewAnalytics: "View Analytics",
    loadingBranches: "Loading branch data...",
    noBranches: "No branch data available",
    exchangeRate: "IQD to USD Exchange Rate",
    exchangeRateSubtitle: "IQD to USD exchange rate over time",
    refreshData: "Refresh Data",
    viewAllBranches: "View All Branches",

    // Exchange Rate Component
    exchangeRateComponent: {
      currentExchangeRate: "Current Exchange Rate",
      usdToIqd: "USD to IQD",
      previousRate: "Previous Rate",
      currentRate: "Current Rate",
      today: "Today",
      noChange: "No Change",
      fromYesterday: "Since Yesterday",
      increase: "Increase",
      decrease: "Decrease",
      eurToUsd: "EUR to USD",
      noExchangeRateData: "No exchange rate data",
      loadingExchangeRateData: "Loading exchange rate data...",
    },

    // Users Breakdown
    usersBreakdown: "User Breakdown",
    userTypes: {
      accountants: "Accountants",
      admins: "Administrators",
      customers: "Customers",
      employees: "Employees",
    },

    // Prices Overview Section
    pricesOverview: {
      title: "Financial Overview",
      subtitle: "Monitor your business performance and financial health",
      refresh: "Refresh Financial Data",

      // Business Performance
      businessPerformance: {
        title: "Business Performance",
        totalPurchased: "Total Purchased",
        totalPurchasedSubtitle: "All purchase transactions",
        totalSold: "Total Sold",
        totalSoldSubtitle: "All sales transactions",
        netProfit: "Net Profit",
        netProfitSubtitle: "Profit after costs",
        grossProfit: "Gross Profit",
        grossProfitSubtitle: "Profit before costs",
        profitMargin: "Profit Margin",
        profitMarginSubtitle: "Profit percentage from sales",
      },

      // Customer Performance
      customerPerformance: {
        title: "Customer Performance",
        totalCustomers: "Total Customers",
        totalCustomersSubtitle: "Number of registered customers",
        activeCustomers: "Active Customers",
        activeCustomersSubtitle: "Customers with recent transactions",
        newCustomers: "New Customers",
        newCustomersSubtitle: "Customers registered this month",
        topCustomers: "Top Customers",
        topCustomersSubtitle: "Customers with highest purchase value",
      },

      // Inventory Performance
      inventoryPerformance: {
        title: "Inventory Performance",
        totalItems: "Total Items",
        totalItemsSubtitle: "Number of items in inventory",
        lowStockItems: "Low Stock Items",
        lowStockItemsSubtitle: "Items that need restocking",
        outOfStockItems: "Out of Stock Items",
        outOfStockItemsSubtitle: "Items currently unavailable",
        topSellingItems: "Top Selling Items",
        topSellingItemsSubtitle: "Items with highest sales",
      },
    },
  },

  // Cashbox Management
  cashbox: {
    branchCashbox: "Branch Cashbox",
    branchName: "Branch",
    status: "Status",
    opened: "Opened",
    closed: "Closed",
    iqdBalance: "IQD Balance",
    usdBalance: "USD Balance",
    openCashbox: "Open Cashbox",
    closeCashbox: "Close Cashbox",
    refresh: "Refresh",
    selectBranch: "Select a branch first",
    selectBranchDesc: "Please select a branch to view its cashbox",
    errorLoading: "Error loading cashbox",
    tryAgain: "Try Again",
    loadingCashbox: "Loading cashbox...",
    pleaseWait: "Please wait while we fetch the latest data",
    openTooltip: "Open the cashbox to start transactions",
    closeTooltip: "Close the cashbox to end the session",
    transactions: "Transactions",
    deposit: "Deposit",
    withdraw: "Withdraw",
    depositTooltip: "Add funds to the cashbox",
    withdrawTooltip: "Remove funds from the cashbox",
    amount: "Amount",
    iqdAmount: "IQD Amount",
    usdAmount: "USD Amount",
    note: "Note (optional)",
    depositSuccess: "Funds deposited successfully",
    withdrawSuccess: "Funds withdrawn successfully",
    insufficientFunds: "Insufficient funds",
    transactionFailed: "Transaction failed",
    password: "Password",
    enterPasswordToOpen: "Enter password to open cashbox",
    enterPasswordToClose: "Enter password to close cashbox",
    securityNote: "Password is required for security purposes",
    invalidPassword: "Invalid password. Please try again.",

    // Transactions & Sessions
    transactionHistory: "Transaction History",
    sessionHistory: "Session History",
    recentTransactions: "Recent Transactions",
    allTransactions: "All Transactions",
    transactionType: "Type",
    transactionAmount: "Amount",
    transactionDate: "Date",
    transactionBy: "By",
    noTransactions: "No transactions",
    noTransactionsDesc: "No transactions have been made yet",
    session: "Session",
    sessionDate: "Session Date",
    openedBy: "Opened By",
    closedBy: "Closed By",
    openedAt: "Opened At",
    closedAt: "Closed At",
    openingBalance: "Opening Balance",
    closingBalance: "Closing Balance",
    currentSession: "Current Session",
    sessionStatus: "Status",
    sessionActive: "Active",
    sessionClosed: "Closed",
    noSessions: "No sessions",
    noSessionsDesc: "No cashbox sessions recorded yet",
    viewDetails: "View Details",

    openYourCashbox: "Please don’t forget to open your cashbox.",
    closeYourCashbox: "Please don’t forget to close your cashbox.",
  },

  // Expense Categories Section
  expenseCategory: {
    title: "Expense Categories",
    dashboardTitle: "Manage Expense Categories",
    managingCategories: "Manage and monitor expense categories",
    searchLabel: "Search by name or description",
    resetFilters: "Reset",
    searchResults: "Search results for",
    categoriesFound: "Category found",
    clearSearch: "Clear search",
    addNew: "Add New Category",
    addSubtitle: "Create a new expense category",
    updateSubtitle: "Update expense category details",
    update: "Update",
    delete: "Delete",
    view: "View",
    name: "Name",
    description: "Description",
    createdAt: "Created At",
    updatedAt: "Updated At",
    categoryName: "Category Name",
    categoryDescription: "Category Description",
    enterCategoryName: "Enter category name",
    enterCategoryDescription: "Enter category description",
    nameHint: "Enter a descriptive name for this category",
    descriptionHint: "Add an optional description for this category",
    categoryNameRequired: "Category name is required",
    nameRequired: "Category name is required",
    nameTooLong: "Name must be less than 100 characters",
    addCategory: "Add Category",
    updateCategory: "Update Category",
    categoryAdded: "Category added successfully",
    categoryUpdated: "Category updated successfully",
    categoryDeleted: "Category deleted successfully",
    confirmDelete: "Are you sure you want to delete this category?",
    deleteCategory: "Delete Category",
    cancel: "Cancel",
    noCategories: "No categories",
    loadingCategories: "Loading categories...",
  },

  // Expenses Section
  expense: {
    title: "Expenses",
    dashboardTitle: "Manage Expenses",
    managingExpenses: "Manage and monitor company expenses",
    searchLabel: "Search by title, payee, or reference number",
    resetFilters: "Reset",
    searchResults: "Search results for",
    expensesFound: "Expense found",
    clearSearch: "Clear search",
    addNew: "Add New Expense",
    selectBranch: "Select a branch",
    selectBranchFirst: "Please select a branch first",
    selectBranchHelp: "Please select a branch to continue",
    changeBranch: "Change Branch",
    viewingExpensesFor: "Viewing expenses for branch",
    selectBranchForExpense: "Select the branch this expense belongs to",
    noBranchesAvailable: "No branches available",
    trackBusinessExpenses: "Track your business expenses",
    basicInformation: "Basic Information",
    summary: "Expense Summary",
    amountDetails: "Amount Details",
    paymentDetails: "Payment Details",
    view: "View",
    quickView: "Quick View",
    viewDetails: "Expense Details",
    edit: "Edit",
    financialInformation: "Financial Information",
    paymentInformation: "Payment Information",
    timestamps: "Record Information",
    updatedAt: "Updated At",
    usdReturn: "USD Refund",
    iqdReturn: "IQD Refund",
    returnAmounts: "Refund Amounts",
    totalAmount: "Total Amount",
    delete: "Delete",
    titleField: "Title",
    category: "Category",
    description: "Description",
    expensedUsd: "Amount (USD)",
    expensedIqd: "Amount (IQD)",
    payee: "Payee",
    paidAt: "Payment Date",
    paymentMethod: "Payment Method",
    referenceNumber: "Reference Number",
    createdAt: "Created At",
    expenseTitle: "Expense Title",
    expenseDescription: "Expense Description",
    selectCategory: "Select Category",
    enterTitle: "Enter expense title",
    enterDescription: "Enter expense description",
    enterUsdAmount: "Enter amount in USD",
    enterIqdAmount: "Enter amount in IQD",
    enterPayee: "Enter payee name",
    selectPaymentMethod: "Select payment method",
    enterReferenceNumber: "Enter reference number",
    titleRequired: "Expense title is required",
    categoryRequired: "Category is required",
    payeeRequired: "Payee is required",
    paymentMethodRequired: "Payment method is required",
    amountRequired: "At least one amount (USD or IQD) is required",
    addExpense: "Add Expense",
    expenseAdded: "Expense added successfully",
    expenseDeleted: "Expense deleted successfully",
    confirmDelete: "Are you sure you want to delete this expense?",
    deleteExpense: "Delete Expense",
    cancel: "Cancel",
    noExpenses: "No expenses",
    loadingExpenses: "Loading expenses...",
    cash: "Cash",
    check: "Check",
    bankTransfer: "Bank Transfer",
    creditCard: "Credit Card",
    other: "Other",
    selectDate: "Select Date",
    dateRequired: "Payment date is required",

    // New amount fields
    usdPrice: "USD Price",
    usdPriceHint: "Enter price in USD",
    iqdPrice: "IQD Price",
    iqdPriceHint: "Enter price in IQD",
    iqdReturnAmount: "IQD Refund Amount",
    iqdReturnAmountHint: "Enter IQD refund amount",
    usdReturnAmount: "USD Refund Amount",
    usdReturnAmountHint: "Enter USD refund amount",

    // Additional hints
    categoryHint: "Select an expense category",
    titleHint: "Enter a descriptive title for this expense",
    titleTooLong: "Title must be 200 characters or less",
    descriptionHint: "Optional detailed description for the expense",
    amountPositive: "Amount must be positive",
    payeeHint: "Who received the payment",
    payeeTooLong: "Payee name must be 100 characters or less",
    paidAtHint: "When this payment was made",
    paymentMethodHint: "How this payment was made",
    referenceNumberHint: "Optional reference or transaction number",
  },

  // Validation messages
  validation: {
    required: "This field is required",
    nameRequired: "Name is required",
    customerRequired: "Selecting a customer is required",
    branchRequired: "Selecting a branch is required",
    warehouseRequired: "Selecting a warehouse is required",
    paymentTypeRequired: "Selecting a payment type is required",
    discountRateInvalid: "Discount rate must be between 0 and 100",
    positiveNumber: "Must be a positive number",
    integerRequired: "Must be an integer",
    minLength: "Must be at least {min} characters",
    passwordMatch: "Passwords must match",
  },

  // Pending Updates Section
  pendingUpdate: {
    dashboardTitle: "Manage Pending Updates",
    managingPendingUpdates: "Review and manage update requests from employees",
    id: "ID",
    requestedBy: "Requested By",
    entityType: "Entity Type",
    updatableType: "Type",
    updatableId: "Item ID",
    status: "Status",
    requestedAt: "Requested At",
    actions: "Actions",

    // Status translations
    "status.pending": "Pending",
    "status.approved": "Approved",
    "status.rejected": "Rejected",
    pending: "Pending",
    approved: "Approved",
    rejected: "Rejected",

    // Filter functionality
    filterByStatus: "Filter by Status",
    clearFilters: "Clear Filters",

    // Actions
    viewDetails: "View Details",
    approve: "Approve",
    reject: "Reject",

    // Details Modal
    updateRequestDetails: "Update Request Details",
    viewRequestInformation: "View detailed information about this update request",
    basicInformation: "Basic Information",
    requestId: "Request ID",
    requestInformation: "Request Information",
    changesCount: "Changes",
    fieldChanges: "Field Changes",
    requestedChanges: "Requested Changes",
    noChangesRequested: "No changes requested",

    // Approve Modal
    approveRequest: "Approve Update Request",
    confirmApprovalAction: "Confirm that you want to approve this update request",
    approvalConfirmation: "Approval Confirmation",
    approvalWarning: "Important - Please read carefully:",
    approvalWarning1: "The requested changes will be applied immediately to the system",
    approvalWarning2: "This action cannot be undone once confirmed",
    approvalWarning3: "The requesting employee will be notified of the approval",
    approveNow: "Approve Request",

    // Reject Modal
    rejectRequest: "Reject Update Request",
    provideRejectionReason: "Please provide a reason for rejecting this request",
    rejectionReason: "Rejection Reason",
    rejectionReasonLabel: "Why are you rejecting this request?",
    rejectionReasonPlaceholder: "Please explain why this update request is being rejected. This helps the employee understand what needs to be corrected.",
    rejectionReasonRequired: "Rejection reason is required",
    rejectionWarning: "Important - Please read carefully:",
    rejectionWarning1: "The requested changes will not be applied to the system",
    rejectionWarning2: "The employee will be notified with the rejection reason",
    rejectionWarning3: "The employee can submit a new request with corrections",
    rejectNow: "Reject Request",
  },
};
